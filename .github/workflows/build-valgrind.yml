name: Build Valgrind
on:
  push:
    tags:
      - 'v*'
permissions: write-all
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup dependencies
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y build-essential gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabi wget zstd libc6-dbg-armhf-cross
      - name: Build Valgrind
        run: |
          wget https://sourceware.org/pub/valgrind/valgrind-3.22.0.tar.bz2
          echo 'c811db5add2c5f729944caf47c4e7a65dcaabb9461e472b578765dd7bf6d2d4c  valgrind-3.22.0.tar.bz2' | sha256sum -c
          tar -jxf valgrind-3.22.0.tar.bz2
          cd valgrind-3.22.0
          sed -i 's/armv7/arm/g' ./configure
          ./configure --host=arm-linux-gnueabi \
                      --prefix=/usr/local \
                      CFLAGS=-static \
                      CC=arm-linux-gnueabihf-gcc \
                      CPP=arm-linux-gnueabihf-cpp
          make CFLAGS+="-fPIC"
          make install DESTDIR=${{ github.workspace }}/valgrind-out
      - name: Package Valgrind
        run: |
          cd ${{ github.workspace }}/valgrind-out/usr/local
          tar --zstd -cf valgrind-arm-static.tar.zstd *
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/valgrind-out/usr/local/valgrind-arm-static.tar.zstd
          asset_name: valgrind-arm-static.tar.zstd
          asset_content_type: application/zstd
