# This is a basic workflow to help you get started with Actions

name: Build Valgrind

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  releases: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup dependencies
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y build-essential gcc-arm-linux-gnueabihf binutils-arm-linux-gnueabi qemu qemu-user-static wget gcc g++ bzip2 libc6-dbg-armhf-cross file python3-zstd

      # Runs a set of commands using the runners shell
      - name: Build Valgrind
        run: |
          wget https://sourceware.org/pub/valgrind/valgrind-3.22.0.tar.bz2
          tar -jxf valgrind-3.22.0.tar.bz2
          cd valgrind-3.22.0
          sed -i 's/armv7/arm/g' ./configure
          ./configure --host=arm-linux-gnueabi \
                      --prefix=/usr/local \
                      CFLAGS=-static \
                      CC=arm-linux-gnueabihf-gcc \
                      CPP=arm-linux-gnueabihf-cpp
          make CFLAGS+="-fPIC"
          make install DESTDIR=${{ github.workspace }}/valgrind-out
      - name: Package Valgrind
        run: |
          cd ${{ github.workspace }}/valgrind-out/usr/local
          tar -cjf valgrind-arm-static.tar.bz2 *
          
      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # Upload release asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/valgrind-out/usr/local/valgrind-arm-static.tar.bz2
          asset_name: valgrind-arm-static.tar.bz2
          asset_content_type: application/x-bzip2
